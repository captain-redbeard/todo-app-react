{"version":3,"sources":["utilities/DateUtil.js","components/TaskItem.js","components/Tasks.js","components/TaskForm.js","App.js","serviceWorker.js","index.js"],"names":["formatDate","date","appendLeadingZeroes","number","day","Date","getDate","month","getMonth","getFullYear","getHours","getMinutes","TaskItem","props","handleEditTaskChange","bind","this","onEditTaskChange","task","className","href","onClick","deleteTask","id","title","description","owner","due_date","React","Component","Tasks","tasks","map","key","editTask","TaskForm","handleChange","handleSubmit","clearEdit","event","handleEditChange","target","name","value","preventDefault","addTask","onSubmit","htmlFor","placeholder","type","onChange","data-error","App","state","find","t","index","findIndex","setState","splice","M","Modal","getInstance","document","querySelector","close","filter","prevState","sequence_number","open","init","querySelectorAll","Datepicker","format","Timepicker","defaultTime","twelveHour","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qRAAO,SAASA,EAAWC,GACzB,SAASC,EAAoBC,GAC3B,OAAIA,GAAU,EACL,IAAMA,EAGRA,EAIT,IAAMC,EAAMF,GADZD,EAAO,IAAII,KAAKJ,IACqBK,WAC/BC,EAAQL,EAAoBD,EAAKO,WAAa,GAKpD,OAJaP,EAAKQ,cAIJ,IAAMF,EAAQ,IAAMH,EAAM,IAH1BF,EAAoBD,EAAKS,YAGe,IAFtCR,EAAoBD,EAAKU,c,IC0B5BC,E,YAnCb,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,qBAAuB,EAAKA,qBAAqBC,KAA1B,gBAFX,E,oFAMjBC,KAAKH,MAAMI,iBAAiBD,KAAKH,MAAMK,Q,+BAIvC,OACE,yBAAKC,UAAU,WACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,gBACb,uBAAGC,KAAK,cAAcD,UAAU,SAASE,QAASL,KAAKH,MAAMS,WAAWP,KAAKC,KAAMA,KAAKH,MAAMK,KAAKK,KACjG,uBAAGJ,UAAU,kBAAb,UAGF,uBAAGC,KAAK,YAAYD,UAAU,aAAaE,QAASL,KAAKF,sBAAwBE,KAAKH,MAAMK,KAAKM,OACjG,uBAAGL,UAAU,gBAAiBH,KAAKH,MAAMK,KAAKO,aAC9C,yBAAKN,UAAU,iBACb,uBAAGA,UAAU,8BAA+BH,KAAKH,MAAMK,KAAKQ,OAC5D,uBAAGP,UAAU,+BAAgCnB,EAAWgB,KAAKH,MAAMK,KAAKS,mB,GAvB/DC,IAAMC,WCYdC,E,iLAXH,IAAD,OACP,OAAOd,KAAKH,MAAMkB,MAAMC,KAAI,SAACd,GAAD,OAC1B,kBAAC,EAAD,CAAUe,IAAKf,EAAKK,GAAIL,KAAMA,EAAMgB,SAAU,EAAKrB,MAAMqB,SAAUZ,WAAY,EAAKT,MAAMS,WAAYL,iBAAkB,EAAKJ,MAAMI,0B,GAHrHW,IAAMC,WCsGXM,E,YAvGb,WAAYtB,GAAQ,IAAD,8BACjB,4CAAMA,KAEDuB,aAAe,EAAKA,aAAarB,KAAlB,gBACpB,EAAKsB,aAAe,EAAKA,aAAatB,KAAlB,gBACpB,EAAKuB,UAAY,EAAKA,UAAUvB,KAAf,gBALA,E,0EAQNwB,GACXvB,KAAKH,MAAM2B,iBAAiBD,EAAME,OAAOC,KAAMH,EAAME,OAAOE,S,mCAGjDJ,GACXA,EAAMK,iBACN5B,KAAKsB,YACLtB,KAAKH,MAAMgC,QAAQ7B,KAAKH,MAAMqB,Y,kCAI9BlB,KAAKH,MAAMI,iBAAiB,Q,+BAI5B,OACE,6BACE,yBAAKE,UAAU,oBACb,uBACIA,UAAU,oEACVC,KAAK,gBACLC,QAASL,KAAKsB,WAEhB,uBAAGnB,UAAU,kBAAb,SAIJ,yBAAKI,GAAG,eAAeJ,UAAU,SAC/B,yBAAKA,UAAU,iBACb,wBAAIA,UAAU,eAA0C,OAA3BH,KAAKH,MAAMqB,SAASX,GAAc,YAAc,cAE7E,0BAAMJ,UAAU,OAAO2B,SAAU9B,KAAKqB,cACpC,yBAAKlB,UAAU,eACb,2BAAO4B,QAAQ,SAAf,SACA,2BACEC,YAAY,eACZC,KAAK,OACLP,KAAK,QACLC,MAAO3B,KAAKH,MAAMqB,SAASV,MAC3B0B,SAAUlC,KAAKoB,eAEjB,0BAAMjB,UAAU,cAAcgC,aAAW,6BAG3C,yBAAKhC,UAAU,eACb,2BAAO4B,QAAQ,eAAf,eACA,8BACEC,YAAY,kBACZ7B,UAAU,uBACVuB,KAAK,cACLC,MAAO3B,KAAKH,MAAMqB,SAAST,YAC3ByB,SAAUlC,KAAKoB,eAEjB,0BAAMjB,UAAU,cAAcgC,aAAW,mCAG3C,yBAAKhC,UAAU,eACb,2BAAO4B,QAAQ,SAAf,SACA,2BACEC,YAAY,kBACZC,KAAK,OACLP,KAAK,QACLC,MAAO3B,KAAKH,MAAMqB,SAASR,MAC3BwB,SAAUlC,KAAKoB,eAEjB,0BAAMjB,UAAU,cAAcgC,aAAW,6BAG3C,yBAAKhC,UAAU,eACb,2BAAO4B,QAAQ,SAAf,YACA,2BACEC,YAAY,wBACZC,KAAK,OACLP,KAAK,WACLC,MAAO3B,KAAKH,MAAMqB,SAASP,SAC3BuB,SAAUlC,KAAKoB,eAEjB,0BAAMjB,UAAU,cAAcgC,aAAW,gCAG3C,yBAAKhC,UAAU,cACb,4BAAQ8B,KAAK,SAAS9B,UAAU,oCAC9B,uBAAGA,UAAU,uBAAb,OADF,iB,GA1FOS,IAAMC,W,+lBCgHduB,E,YAxGb,WAAYvC,GAAQ,IAAD,8BACjB,4CAAMA,KAyCRgC,QAAU,SAAC3B,GACT,GAAI,EAAKmC,MAAMtB,MAAMuB,MAAK,SAAAC,GAAC,OAAIA,EAAEhC,KAAOL,EAAKK,MAAK,CAChD,IAAMiC,EAAQ,EAAKH,MAAMtB,MAAM0B,WAAU,SAAAF,GAAC,OAAIA,EAAEhC,KAAOL,EAAKK,MAC5D,EAAKmC,SAAS,CACZ3B,MAAO,EAAKsB,MAAMtB,MAAM4B,OAAOH,EAAO,EAAGtC,UAG3C,EAAKwC,SAAS,CACZ3B,MAAM,GAAD,mBAAM,EAAKsB,MAAMtB,OAAjB,CAAwBb,MAIjC0C,IAAEC,MAAMC,YAAYC,SAASC,cAAc,kBAAkBC,SAtD5C,EAyDnB3C,WAAa,SAACC,GACZ,EAAKmC,SAAS,CACZ3B,MAAO,EAAKsB,MAAMtB,MAAMmC,QAAO,SAAAX,GAAC,OAAIA,EAAEhC,KAAOA,QA3D9B,EA+DnBiB,iBAAmB,SAACE,EAAMC,GACxB,EAAKe,UAAS,SAAAS,GAAS,MAAM,CAC3BjC,SAAS,EAAD,GACHiC,EAAUjC,SADP,eAELQ,EAAOC,SAnEK,EAwEnB1B,iBAAmB,SAACC,GACL,OAATA,IACFA,EAAO,CACLK,GAAI,KACJC,MAAO,GACPC,YAAa,GACbC,MAAO,GACPC,SAAU3B,EAAW,IAAIK,MACzB+D,gBAAiB,IAIrB,EAAKV,SAAS,CACZxB,SAAUhB,IAGZ0C,IAAEC,MAAMC,YAAYC,SAASC,cAAc,kBAAkBK,QAtF7D,EAAKhB,MAAQ,CACXtB,MAAO,CACL,CACER,GAAI,EACJC,MAAO,mBACPC,YAAa,qBACbC,MAAO,WACPC,SAAU3B,EAAW,IAAIK,OAE3B,CACEkB,GAAI,EACJC,MAAO,gBACPC,YAAa,yBACbC,MAAO,WACPC,SAAU3B,EAAW,IAAIK,QAG7B6B,SAAU,CACRX,GAAI,KACJC,MAAO,GACPC,YAAa,GACbC,MAAO,GACPC,SAAU3B,EAAW,IAAIK,QAxBZ,E,iFA8BjBuD,IAAEC,MAAMS,KAAKP,SAASQ,iBAAiB,UAAW,MAElDX,IAAEY,WAAWF,KAAKP,SAASQ,iBAAiB,eAAgB,CAC1DE,OAAQ,eAGVb,IAAEc,WAAWJ,KAAKP,SAASQ,iBAAiB,eAAgB,CAC1DI,YAAa,MACbC,YAAY,M,+BAsDd,OACE,yBAAKzD,UAAU,OACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,SACf,kBAAC,EAAD,CAAOY,MAAOf,KAAKqC,MAAMtB,MAAOG,SAAUlB,KAAKqC,MAAMnB,SAAUZ,WAAYN,KAAKM,WAAYL,iBAAkBD,KAAKC,mBACnH,kBAAC,EAAD,CAAUiB,SAAUlB,KAAKqC,MAAMnB,SAAUW,QAAS7B,KAAK6B,QAASL,iBAAkBxB,KAAKwB,iBAAkBvB,iBAAkBD,KAAKC,yB,GAlGxHW,IAAMC,WCGJgD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAO,kBAAC,EAAD,MAASpB,SAASqB,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.9963bbff.chunk.js","sourcesContent":["export function formatDate(date) {\r\n  function appendLeadingZeroes(number) {\r\n    if (number <= 9) {\r\n      return \"0\" + number;\r\n    }\r\n  \r\n    return number;\r\n  }\r\n\r\n  date = new Date(date);\r\n  const day = appendLeadingZeroes(date.getDate());\r\n  const month = appendLeadingZeroes(date.getMonth() + 1);\r\n  const year = date.getFullYear();\r\n  const hours = appendLeadingZeroes(date.getHours());\r\n  const minutes = appendLeadingZeroes(date.getMinutes());\r\n\r\n  return year + \"-\" + month + \"-\" + day + \" \" + hours + \":\" + minutes;\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { formatDate } from '../utilities/DateUtil';\r\n\r\nclass TaskItem extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleEditTaskChange = this.handleEditTaskChange.bind(this);\r\n  }\r\n\r\n  handleEditTaskChange() {\r\n    this.props.onEditTaskChange(this.props.task);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col s12\">\r\n        <div className=\"card\">\r\n          <div className=\"card-content\">\r\n            <a href=\"#deleteTask\" className=\"delete\" onClick={this.props.deleteTask.bind(this, this.props.task.id)}>\r\n              <i className=\"material-icons\">close</i>\r\n            </a>\r\n\r\n            <a href=\"#editTask\" className=\"card-title\" onClick={this.handleEditTaskChange}>{ this.props.task.title }</a>\r\n            <p className=\"task-content\">{ this.props.task.description }</p>\r\n            <div className=\"row card-info\">\r\n              <p className=\"timestamp col s6 text-left\">{ this.props.task.owner }</p>\r\n              <p className=\"timestamp col s6 text-right\">{ formatDate(this.props.task.due_date) }</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTaskItem.propTypes = {\r\n  task: PropTypes.object.isRequired\r\n};\r\n\r\nexport default TaskItem;\r\n","import React from 'react';\r\nimport TaskItem from './TaskItem';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Tasks extends React.Component {\r\n  render() {\r\n    return this.props.tasks.map((task) => (\r\n      <TaskItem key={task.id} task={task} editTask={this.props.editTask} deleteTask={this.props.deleteTask} onEditTaskChange={this.props.onEditTaskChange}/>\r\n    ));\r\n  }\r\n}\r\n\r\nTasks.propTypes = {\r\n  tasks: PropTypes.array.isRequired\r\n};\r\n\r\nexport default Tasks;\r\n","import React from 'react';\r\n\r\nclass TaskForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.clearEdit = this.clearEdit.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.props.handleEditChange(event.target.name, event.target.value);\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    this.clearEdit();\r\n    this.props.addTask(this.props.editTask);\r\n  }\r\n\r\n  clearEdit() {\r\n    this.props.onEditTaskChange(null);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"fixed-action-btn\">\r\n          <a\r\n              className=\"btn-floating btn-large waves-effect waves-light modal-trigger red\"\r\n              href=\"#addTaskModal\"\r\n              onClick={this.clearEdit}\r\n          >\r\n            <i className=\"material-icons\">add</i>\r\n          </a>\r\n        </div>\r\n\r\n        <div id=\"addTaskModal\" className=\"modal\">\r\n          <div className=\"modal-content\">\r\n            <h4 className=\"modal-title\">{this.props.editTask.id !== null ? 'Edit Task' : 'Add a Task'}</h4>\r\n\r\n            <form className=\"from\" onSubmit={this.handleSubmit}>\r\n              <div className=\"input-field\">\r\n                <label htmlFor=\"title\">Title</label>\r\n                <input\r\n                  placeholder=\"e.g. My Task\" \r\n                  type=\"text\"\r\n                  name=\"title\"\r\n                  value={this.props.editTask.title}\r\n                  onChange={this.handleChange}\r\n                />\r\n                <span className=\"helper-text\" data-error=\"Title must not be empty\"></span>\r\n              </div>\r\n\r\n              <div className=\"input-field\">\r\n                <label htmlFor=\"description\">Description</label>\r\n                <textarea\r\n                  placeholder=\"e.g. Deploy XYZ\" \r\n                  className=\"materialize-textarea\"\r\n                  name=\"description\"\r\n                  value={this.props.editTask.description}\r\n                  onChange={this.handleChange}\r\n                />\r\n                <span className=\"helper-text\" data-error=\"Description must not be empty\"></span>\r\n              </div>\r\n\r\n              <div className=\"input-field\">\r\n                <label htmlFor=\"title\">Owner</label>\r\n                <input\r\n                  placeholder=\"e.g. John Smith\"\r\n                  type=\"text\"\r\n                  name=\"owner\"\r\n                  value={this.props.editTask.owner}\r\n                  onChange={this.handleChange}\r\n                />\r\n                <span className=\"helper-text\" data-error=\"Owner must not be empty\"></span>\r\n              </div>\r\n\r\n              <div className=\"input-field\">\r\n                <label htmlFor=\"title\">Due date</label>\r\n                <input\r\n                  placeholder=\"e.g. 2019-11-03 14:30\"\r\n                  type=\"text\"\r\n                  name=\"due_date\"\r\n                  value={this.props.editTask.due_date}\r\n                  onChange={this.handleChange}\r\n                />\r\n                <span className=\"helper-text\" data-error=\"Due date must not be empty\"></span>\r\n              </div>\r\n\r\n              <div className=\"text-right\">\r\n                <button type=\"submit\" className=\"waves-effect waves-light btn red\">\r\n                  <i className=\"material-icons left\">add</i>\r\n                  Save\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TaskForm;","import React from 'react';\r\nimport Tasks from './components/Tasks';\r\nimport TaskForm from './components/TaskForm';\r\nimport M from \"materialize-css\";\r\nimport { formatDate } from './utilities/DateUtil';\r\nimport \"../node_modules/materialize-css/dist/css/materialize.min.css\";\r\nimport \"../node_modules/material-design-icons/iconfont/material-icons.css\";\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tasks: [\r\n        {\r\n          id: 1,\r\n          title: \"Example task one\",\r\n          description: \"Setup github pages\",\r\n          owner: \"Redbeard\",\r\n          due_date: formatDate(new Date())\r\n        },\r\n        {\r\n          id: 2,\r\n          title: \"Push todo-app\",\r\n          description: \"Push changes to github\",\r\n          owner: \"Redbeard\",\r\n          due_date: formatDate(new Date())\r\n        },\r\n      ],\r\n      editTask: {\r\n        id: null,\r\n        title: \"\",\r\n        description: \"\",\r\n        owner: \"\",\r\n        due_date: formatDate(new Date())\r\n      }\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    M.Modal.init(document.querySelectorAll('.modal'), null);\r\n\r\n    M.Datepicker.init(document.querySelectorAll(\".datepicker\"), {\r\n      format: \"yyyy-mm-dd\"\r\n    });\r\n\r\n    M.Timepicker.init(document.querySelectorAll(\".timepicker\"), {\r\n      defaultTime: 'now',\r\n      twelveHour: false\r\n    });\r\n  }\r\n\r\n  addTask = (task) => {\r\n    if (this.state.tasks.find(t => t.id === task.id)) {\r\n      const index = this.state.tasks.findIndex(t => t.id === task.id);\r\n      this.setState({\r\n        tasks: this.state.tasks.splice(index, 1, task)\r\n      })\r\n    } else {\r\n      this.setState({\r\n        tasks: [...this.state.tasks, task]\r\n      });\r\n    }\r\n\r\n    M.Modal.getInstance(document.querySelector(\"#addTaskModal\")).close();\r\n  }\r\n\r\n  deleteTask = (id) => {\r\n    this.setState({\r\n      tasks: this.state.tasks.filter(t => t.id !== id)\r\n    })\r\n  }\r\n\r\n  handleEditChange = (name, value) => {\r\n    this.setState(prevState  => ({\r\n      editTask: {\r\n        ...prevState.editTask,\r\n        [name]: value\r\n      }\r\n    }));\r\n  }\r\n\r\n  onEditTaskChange = (task) => {\r\n    if (task === null) {\r\n      task = {\r\n        id: null,\r\n        title: \"\",\r\n        description: \"\",\r\n        owner: \"\",\r\n        due_date: formatDate(new Date()),\r\n        sequence_number: 1,\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      editTask: task\r\n    });\r\n\r\n    M.Modal.getInstance(document.querySelector(\"#addTaskModal\")).open();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"container\">\r\n          <div className=\"mt-5\"></div>\r\n          <Tasks tasks={this.state.tasks} editTask={this.state.editTask} deleteTask={this.deleteTask} onEditTaskChange={this.onEditTaskChange}/>\r\n          <TaskForm editTask={this.state.editTask} addTask={this.addTask} handleEditChange={this.handleEditChange} onEditTaskChange={this.onEditTaskChange}/>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}